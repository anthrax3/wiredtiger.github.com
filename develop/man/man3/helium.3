.TH "helium" 3 "Sat Jul 2 2016" "Version Version 2.8.1" "WiredTiger" \" -*- nroff -*-
.ad l
.nh
.SH NAME
helium \- WiredTiger Helium support 
WiredTiger supports Levyx Inc\&., Helium Data Store volumes as a data-source\&.
.PP
To configure one or more Helium volumes as WiredTiger data sources, take the following steps\&.
.SH "Building the WiredTiger Helium Support"
.PP
To build the Helium support, use the configuration option \fC--with-helium=DIR\fP\&. For example:
.PP
.PP
.nf
% cd wiredtiger
% ls /usr/local/lib/Helium
Helium Programmer's Reference\&.pdf       libhe\&.a
README\&.TXT                              libhe\&.so
he\&.h
% \&./configure --with-helium=/usr/local/lib/Helium && make
.fi
.PP
.SH "Loading the WiredTiger Helium Support"
.PP
Next, add code to your application to load the Helium shared library\&.
.PP
The following example loads the Helium shared library, configuring and naming two separate Helium volumes\&. The first volume is named \fCdev1\fP, the second volume is named \fCdev2\fP\&. Volume \fCdev1\fP has two underlying physical Helium devices, \fC/dev/disk3s1\fP and \fC/dev/disk4s1\fP\&. Volume \fCdev2\fP has a single underlying physical Helium device, \fC/dev/disk5s1\fP\&.
.PP
.PP
.nf
#define HELIUM_LIBRARY_PATH     "test/helium/\&.libs/libwiredtiger_helium\&.so""
ret = connection->load_extension(connection, HELIUM_LIBRARY_PATH,
    "config=["
    "dev1=[helium_devices=[\"he://\&.//dev/disk3s1,/dev/disk4s1\"],"
    "helium_o_volume_truncate=1],"
    "dev2=[helium_devices=[\"he://\&.//dev/disk5s1\"],"
    "helium_o_volume_truncate=1]]");
.fi
.PP
.PP
The \fChelium_devices\fP configuration string takes a WiredTiger string which is a comma-separated list of Helium devices\&. (Note the quoting required for that to be possible\&.)
.PP
In this example, both Helium volumes are configured to be truncated when first opened, and all previously existing contents discarded\&.
.PP
When configuring a Helium volume, the following non-standard configuration strings are supported:
.PP
StringTypeMeaning helium_deviceslistWiredTiger URI to Helium volume mapping helium_env_read_cache_sizeintstruct he_env read_cache_size value helium_env_write_cache_sizeintstruct he_env write_cache_size value helium_o_volume_truncatebooleanHE_O_VOLUME_TRUNCATE flag 
.PP
With the exception of the configuration string \fChelium_devices\fP (which is WiredTiger specific), see the Helium documentation for details on their use\&.
.SH "Creating WiredTiger objects on Helium volumes"
.PP
When creating WiredTiger objects on Helium volumes, the volume names are used as part of the URI specified to WiredTiger methods such as \fBWT_SESSION::create\fP or \fBWT_SESSION::rename\fP, separated from the object name by a single slash character\&.
.PP
Additionally, the \fChelium\fP \fCtype\fP configuration string must be included\&.
.PP
The following example creates a table named \fCaccess\fP on the Helium volume \fCdev1\fP, and then opens a cursor on the table:
.PP
.PP
.nf
WT_CURSOR *cursor;
WT_SESSION *session;

/* Create the access table\&. */
ret = session->create(
    session, "table:dev1/access", "key_format=S,value_format=S,type=helium");

/* Open a cursor on the access table\&. */
ret = session->open_cursor(session, "table:dev1/access", NULL, NULL, &cursor);
.fi
.PP
.PP
When calling \fBWT_SESSION::create\fP to create an object on a Helium volume, the following additional configuration strings are supported:
.PP
StringTypeMeaning helium_o_compressbooleanHE_I_COMPRESS flag helium_o_truncatebooleanHE_O_TRUNCATE flag 
.PP
See the Helium device documentation for details on their use\&.
.PP
For example, creating and truncating a table could be done as follows:
.PP
.PP
.nf
WT_SESSION *session;

/* Create and truncate the access table\&. */
ret = session->create(session, "table:dev1/access",
    "key_format=S,value_format=S,type=helium,helium_o_truncate=1");
.fi
.PP
.SH "Helium notes"
.PP
.IP "\(bu" 2
Helium volumes do not support database backups\&.
.IP "\(bu" 2
Helium volumes do not support named checkpoints\&.
.IP "\(bu" 2
Helium volumes do not support compression of any kind\&.
.IP "\(bu" 2
Helium volumes do not support bulk load as a special case, and configuring cursors for bulk load has no effect\&.
.IP "\(bu" 2
Inserting a new record after the current maximum record in a fixed-length bit field column-store (that is, a store with an 'r' type key and 't' type value) does not implicitly create the missing records\&.
.PP
.SH "Helium limitations"
.PP
.IP "\(bu" 2
WiredTiger transactions cannot include operations on both Helium volumes and other stores; this will be corrected in a future release\&. 
.PP

