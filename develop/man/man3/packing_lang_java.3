.TH "packing_lang_java" 3 "Tue Mar 17 2015" "Version Version 2.5.2" "WiredTiger" \" -*- nroff -*-
.ad l
.nh
.SH NAME
packing_lang_java \- Packing and Unpacking Data in Java 
WiredTiger's data packing uses format strings similar to those specified in the Python struct module: http://docs.python.org/library/struct
.PP
The first character of the format string can be used to indicate the byte order, size and alignment of the packed data, according to the following table:
.PP
CharacterByte orderSizeAlignment \fC\&.\fPbig-endianpackednone \fC>\fPbig-endianstandardnone \fC<\fPlittle-endianstandardnone \fC@\fPnativenativenative 
.PP
If the first character is not one of these, '\&.' (big-endian, packed) is assumed: it naturally sorts in lexicographic order, and the packed format uses variable-sized encoding of values to reduce the data size\&.
.PP
Note: \fB little-endian format\fP not yet supported in WiredTiger\&.  Only the default big-endian, packed format is currently supported\&.
.PP
The remaining characters in the format string specify the type of each field to be packed into or unpacked from a byte array\&. See \fBColumn types\fP for the list of supported types\&.
.PP
In Java, data is packed and unpacked using cursor put* and get* operations, for example: 
.PP
.nf
        /* Insert the records into the table\&. */
        cursor = session\&.open_cursor("table:poptable", null, "append");
        for (PopRecord p : popData) {
            cursor\&.putValueString(p\&.country);
            cursor\&.putValueShort(p\&.year);
            cursor\&.putValueLong(p\&.population);
            ret = cursor\&.insert();
        }
        ret = cursor\&.close();

        /* Update records in the table\&. */
        cursor = session\&.open_cursor("table:poptable", null, null);
        while ((ret = cursor\&.next()) == 0) {
            recno = cursor\&.getKeyRecord();
            country = cursor\&.getValueString();
            year = cursor\&.getValueShort();
            population = cursor\&.getValueLong();
            cursor\&.putValueString(country);
            cursor\&.putValueShort(year);
            cursor\&.putValueLong(population + 1);
        }
        ret = cursor\&.close();

        /* List the records in the table\&. */
        cursor = session\&.open_cursor("table:poptable", null, null);
        while ((ret = cursor\&.next()) == 0) {
            recno = cursor\&.getKeyRecord();
            country = cursor\&.getValueString();
            year = cursor\&.getValueShort();
            population = cursor\&.getValueLong();
            System\&.out\&.print("ID " + recno);
            System\&.out\&.println(": country " + country + ", year " + year +
                ", population " + population);
        }
        ret = cursor\&.close();

.fi
.PP

