.TH "dump_formats" 3 "Fri Dec 4 2015" "Version Version 2.7.0" "WiredTiger" \" -*- nroff -*-
.ad l
.nh
.SH NAME
dump_formats \- Dump Formats 
The \fBwt dump\fP command produces a flat-text representation of a table that can be loaded by \fBwt load\fP\&. This page describes the output formats of the \fBwt dump\fP command\&.
.SH "JSON dump format"
.PP
JSON (\fCJavaScript Object Notation\fP) dump files use the standard JSON data-interchange format to specify the objects, and may be interpreted by any JSON reader\&.
.PP
The format is a JSON object where each key is the URI passed to \fBWT_SESSION::create\fP and the corresponding value is a JSON array of two entries\&. The first entry in this array is a JSON object composed of configuration information: the 'config' key has the configuration string used with \fBWT_SESSION::create\fP, the 'colgroups' and 'indices' keys have values that are arrays of objects that are in turn composed of configuration information\&. The second entry is a JSON array, with each entry an object representing a row of data\&. If the columns were named in the configuration string used with \fBWT_SESSION::create\fP, those names are used for keys, otherwise predictable names (for example, 'key0', 'value0', 'value1') are generated\&. The values in this object are the values for each column in the record\&.
.PP
Here is some sample output:
.PP
.PP
.nf
{
    "table:planets" : [
        {
            "config" : "columns=(id,name,distance),key_format=i,value_format=Si",
            "colgroups" : [],
            "indices" : [
                {
                    "uri" : "index:planets:names",
                    "config" : "columns=(name),key_format=Si,source=\"file:astronomy\&.wt\",type=file"
                }
            ]
        },
        [
            {
"id" : 1,
"name" : "Mercury",
"distance" : 57910000
            },
            {
"id" : 2,
"name" : "Venus",
"distance" : 108200000
            },
            \&.\&.\&.
       ]
   ]
}
.fi
.PP
.SH "Text dump format"
.PP
Text dump files have three parts, a prefix, a header and a body\&.
.PP
The dump prefix includes basic information about the dump including the WiredTiger version that created the dump and the dump format\&. The dump format consists of a line beginning with \fC'Format='\fP, and contains the following information:
.PP
StringMeaning hexthe dumped data is in a hexadecimal dump format printthe dumped data is in a printable format 
.PP
The dump header follows a single \fC'Header'\fP line in the file and consists of paired key and value lines, where the key is the URI passed to \fBWT_SESSION::create\fP and the value is corresponding configuration string\&. The table or file can be recreated by calling \fBWT_SESSION::create\fP for each pair of lines in the header\&.
.PP
The dump body follows a single \fC'Data'\fP line in the file and consists of a text representation of the records in the table\&. Each record is a represented by a pair of lines: the first line is the key and the second line is the value\&. These lines are encoded in one of two formats: a printable format and a hexadecimal format\&.
.PP
The printable format consists of literal printable characters, and hexadecimal encoded non-printable characters\&. Encoded characters are written as three separate characters: a backslash character followed by two hexadecimal characters (first the high nibble and then the low nibble)\&. For example, a newline character in the ASCII character set would be encoded as \fC'\\0a'\fP and an escape character would be encoded as \fC'\\1b'\fP\&. Backslash characters which do not precede a hexadecimal encoding are paired, that is, the characters \fC'\\\\'\fP should be interpreted as a single backslash character\&.
.PP
The hexadecimal format consists of encoded characters, where each literal character is written as a pair of characters (first the high-nibble and then the low-nibble)\&. For example, '0a' would be an ASCII newline character and '1b' would be an ASCII escape character\&.
.PP
Because the definition of 'printable' may depend on the application's locale, dump files in the printable output format may be less portable than dump files in the hexadecimal output format\&. 
