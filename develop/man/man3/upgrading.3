.TH "upgrading" 3 "Fri Oct 7 2016" "Version Version 2.8.1" "WiredTiger" \" -*- nroff -*-
.ad l
.nh
.SH NAME
upgrading \- Upgrading WiredTiger applications 

.SH "Upgrading to Version 2\&.8\&.1"
.PP
.IP "\fBCache management defaults \fP" 1c
The default values for the \fCeviction_dirty_target\fP and \fCeviction_dirty_trigger\fP settings to \fBwiredtiger_open\fP have changed to 5 and 20, respectively\&. This means that by default, WiredTiger will start writing dirty pages from cache when it becomes 5% dirty and will throttle activity to keep the volume of dirty data in cache under 20%\&. For write-heavy workloads, the new defaults may result in lower throughput and more threads writing to data files concurrently\&.
.PP
There is also a new \fCeviction_checkpoint_target\fP setting that determines how much work is done at the beginning of a checkpoint to make the critical section of checkpoints complete more quickly\&. 
.PP
.IP "\fBCheckpoint server created checkpoint names \fP" 1c
The \fBwiredtiger_open\fP checkpoint configuration no longer supports the \fCname\fP configuration, and checkpoint server created checkpoints will always be named the default WiredTiger checkpoint name, 'WiredTigerCheckpoint'\&. Applications depending on the ability to set the checkpoint name for the checkpoint server will require modification\&. 
.PP
.IP "\fBStatistics logging path \fP" 1c
The \fBwiredtiger_open\fP statistics logging path configuration has been simplified to be only a path to a directory, and the file name component of the path may no longer be specified\&. Applications depending on the ability to set statistics log file names will require modification\&. 
.PP
.IP "\fBDeprecated statistics field \fP" 1c
The connection statistic \fCWT_STAT_CONN_CACHE_BYTES_OVERFLOW\fP has been removed\&. Overflow information is now available in the \fCWT_STAT_CONN_CACHE_BYTES_OVERFLOW\fP and \fCWT_STAT_CONN_CACHE_OVERFLOW_VALUE\fP\&. Applications specifically looking for that statistic will require modification\&. 
.PP
.PP
.PP
 
.SH "Upgrading to Version 2\&.8\&.0"
.PP
.IP "\fBLSM metadata \fP" 1c
There is a change to the format of LSM metadata in this release to fix bugs in dump / load of tables of type LSM\&. Tables created with the old LSM metadata format will be upgraded automatically, but once updated to the new version \fBare no longer compatible with older releases of WiredTiger\fP\&. 
.PP
.IP "\fBColumn-store bulk-load cursors \fP" 1c
Historically, bulk-load of a column-store object ignored any key set in the cursor and automatically assigned each inserted row the next sequential record number for its key\&. In the 2\&.8\&.0 release, column-store objects match row-store behavior and require the cursor key be set before an insert\&. (This allows sparse tables to be created in column-store objects, any skipped records are created as already-deleted rows\&.) To match the previous behavior, specify the \fCappend\fP configuration string when opening the column-store bulk-load cursor; this causes the cursor's key to be ignored and each inserted row will be assigned the next record number\&. 
.PP
.IP "\fBChange to \fBWT_SESSION::truncate\fP with URI \fP" 1c
If using the \fBWT_SESSION::truncate\fP API with a file: URI for a full table truncate, underlying algorithmic changes result in some visible differences\&. This call can now return WT_ROLLBACK\&. Applications should be prepared to handle this error\&. This method no longer requires exclusive access to the table\&. Also the underlying disk space may not be immediately reclaimed when the call returns\&. The performance of this API may differ from earlier releases\&. 
.PP
.IP "\fBBzip2 compression support \fP" 1c
Support for the bzip2 compression/decompression engine has been removed from the WiredTiger release; remaining compression engines include LZ4, snappy and zlib\&. 
.PP
.IP "\fBChange to named checkpoints with bulk loads \fP" 1c
Previous versions of WiredTiger created empty named checkpoints in files being bulk-loaded\&. In this release, checkpoint skips files being bulk-loaded, so they do not get named checkpoints that complete during the bulk load\&. 
.PP
.IP "\fBRemove WT_LSN structure from public API \fP" 1c
The WiredTiger public API used to define a structure that could encapsulate log sequence numbers\&. That structure is no longer exposed publicly\&. 
.PP
.PP
.PP
 
.SH "Upgrading to Version 2\&.7\&.0"
.PP
.IP "\fBChange to config_base=false \fP" 1c
If \fCconfig_base=false\fP in the config passed directly to \fBwiredtiger_open\fP, any existing base configuration file will now be ignored\&. If an application was relying on this behavior, a connection will be opened with different settings after upgrading, which could lead to errors or unexpected behavior\&. 
.PP
.IP "\fBStatistic change \fP" 1c
The statistic 'pages split during eviction' was replaced\&. It has been replaced by a pair of statistics 'internal pages split during eviction' and 'leaf pages split during eviction'\&. 
.PP
.IP "\fBChange to \fBWT_CURSOR::insert\fP \fP" 1c
The \fBWT_CURSOR::insert\fP method in this release has slightly different semantics with respect to referencing application memory\&. In previous releases, \fBWT_CURSOR::insert\fP continued to reference application-memory specified to either \fBWT_CURSOR::set_key\fP or \fBWT_CURSOR::set_value\fP after a successful return, which could potentially lead to a core dump if the application freed that memory before a subsequent call to a \fBWT_CURSOR\fP:: method without an intermediate \fBWT_CURSOR::set_key\fP or \fBWT_CURSOR::set_value\fP call\&. In the 2\&.7\&.0 release, \fBWT_CURSOR::insert\fP behaves like the other cursor methods and does not reference application memory after a successful return\&. Applications depending on the previous semantic will require modifications to set the cursor's key and/or value after a successful \fBWT_CURSOR::insert\fP call\&. 
.PP
.IP "\fB\fBWT_SESSION\&.verify\fP \fP" 1c
The \fBWT_SESSION\&.verify\fP method in this release has a new configuration option, \fCstrict\fP\&. By default, with \fCstrict\fP set to \fCfalse\fP, \fBWT_SESSION\&.verify\fP will no longer return an error for problems that do not impact the future use of the object (for example, if a leaked block were detected, the application can continue to run)\&. \fBWT_SESSION\&.verify\fP will continue to output an error message whenever an error is detected, only the final return value is affected\&. This change allows applications to verify objects and continue if at all possible\&. Applications in development should configure \fCstrict\fP to \fCtrue\fP in order to terminate the application whenever an error is detected\&. 
.PP
.PP
.PP
 
.SH "Upgrading to Version 2\&.6\&.1"
.PP
.IP "\fBMove the per transaction sync configuration \fP" 1c
Move the sync configuration setting from \fBWT_SESSION::begin_transaction\fP to \fBWT_SESSION::commit_transaction\fP\&. Change the configuration from a boolean to a string with options of on, off, background\&. Deprecated support for specifying the configuration to \fBWT_SESSION::begin_transaction\fP is maintained for now\&. 
.PP
.PP
.PP
 
.SH "Upgrading to Version 2\&.6\&.0"
.PP
.IP "\fBLZ4 compression \fP" 1c
The LZ4 compression support has been updated in this release in non-backward compatible ways; \fBtables and files compressed using LZ4 compression with WiredTiger 2\&.5\&.3 must be dumped then re-loaded using WiredTiger 2\&.6\&.0\&.\fP 
.PP
.IP "\fBwiredtiger_open file manager configuration changes \fP" 1c
The configuration settings related to file handle management have changed significantly in this release\&. If your application uses the file_manager configuration setting, please refer to the API documentation for the latest settings\&. 
.PP
.IP "\fBStatistic change \fP" 1c
The statistic 'log read operations' was removed\&. The function that used that statistic was never called inside WiredTiger and was also removed\&. 
.PP
.IP "\fBFile handle closing \fP" 1c
In WiredTiger, a separate thread of control periodically reviews open objects, closing ones which have been idle for some period of time and discarding them from the cache\&. In previous WiredTiger releases, this review was independent of the number of open file handles\&. In this release, WiredTiger only reviews the file handles if at least 250 file handles are open\&. How often file handles are reviewed (the default is 30 seconds), and how many file handles must be opened before review is triggered, can be configured using the \fCfile_manager\fP configuration values to the \fBwiredtiger_open\fP call\&. 
.PP
.IP "\fBTable drop changes \fP" 1c
There has been a functionality change to the \fBWT_SESSION::drop\fP API when the \fCforce\fP configuration option is included\&. The table is now dropped in the background and does not flush data from cache\&. 
.PP
.PP
.PP
 
.SH "Upgrading to Version 2\&.5\&.3"
.PP
.IP "\fBConfiguration string case-sensitivity \fP" 1c
In previous WiredTiger releases, there were several cases where configuration strings were treated in a case-sensitive manner (for example, it was possible to specify 'True', 'true' or even 'tRuE' as a boolean value)\&. For consistency, in this release all WiredTiger configuration strings are case-sensitive, and only 'true' will be accepted\&. 
.PP
.IP "\fBStatistics cursor refresh \fP" 1c
In previous releases of WiredTiger, a statistics cursor made a snapshot of the relevant statistics before the first statistics value was read, and those values remained unchanged from that point on, no matter how the cursor was used\&. In the WiredTiger 2\&.5\&.2 release, calling the \fBWT_CURSOR::reset\fP method to reset the cursor refreshes the statistics returned by the cursor\&. 
.PP
.IP "\fBBuffer alignment on Linux \fP" 1c
In previous releases of WiredTiger, all buffers used for I/O were aligned to 4KB boundaries by default\&. In the WiredTiger 2\&.5\&.2 release, alignment is only enforced when direct I/O is configured\&. 
.PP
.PP
.PP
 
.SH "Upgrading to Version 2\&.5\&.2"
.PP
There are no special upgrade steps required\&.
.SH "Upgrading to Version 2\&.5\&.1"
.PP
.IP "\fBStatistics cursors on data sources \fP" 1c
Opening a statistics cursor on a data source without a \fCcheckpoint\fP name no longer aggregates statistics for all open checkpoints on that data source\&. The returned statistics will only be for the in-memory version of the data source\&.
.PP
For applications that read and write from ordinary tables (without specifying a \fCcheckpoint\fP), there will be no change\&. Applications that opened cursors on checkpoints and relied on their statistics being aggregated into a single statistics cursor will need to open statistics cursors on each checkpoint\&. 
.PP
.PP
.PP
 
.SH "Upgrading to Version 2\&.5\&.0"
.PP
.IP "\fBWT_STAT_CONN_LOG_BYTES_USER renamed WT_STAT_CONN_LOG_BYTES_PAYLOAD \fP" 1c
The statistic for the number of bytes written to the log minus the overhead of log record headers and padding was renamed to make the intent clearer\&. Any applications using the old name will need to be updated\&. 
.PP
.IP "\fB'none' configuration for collators, compressors and extractors \fP" 1c
Collators, compressors and extractors can now be disabled with an explicit \fC'none'\fP value as an alternative to using an empty string\&. Any applications using the name \fC'none'\fP for a collator, compressor or extractor will need to be updated\&. 
.PP
.IP "\fBmaximum keys and value sizes \fP" 1c
The \fBWT_SESSION::create\fP \fCinternal_item_max\fP and \fCleaf_item_max\fP configuration strings are now deprecated in favor of the \fCinternal_key_max\fP, \fCleaf_key_max\fP, and \fCleaf_value_max\fP configuration strings\&. See \fBPage and overflow key/value sizes\fP for more information\&. 
.PP
.PP
.PP
 
.SH "Upgrading to Version 2\&.4\&.1"
.PP
.IP "\fBWT_DEADLOCK renamed \fP" 1c
The \fCWT_DEADLOCK\fP error return has been deprecated in favor of \fBWT_ROLLBACK\fP to clarify that \fBWT_SESSION::rollback_transaction\fP should be called; no program changes are required\&.  
.IP "\fBStatistics keys changed \fP" 1c
The names of WiredTiger statistics have been updated to be more consistently named, and simpler to categorize\&. Any application that was parsing the strings output by statistics will need to be updated\&. 
.PP
.PP
.PP
 
.SH "Upgrading to Version 2\&.4\&.0"
.PP
.IP "\fBDefault configuration file changes \fP" 1c
WiredTiger creates a configuration file when a database is first created\&. This release adds a version number to that configuration file, and functionality to automatically translate configuration settings between versions moving forward\&.  
.IP "\fBCursors no longer reset on transaction begin or commit \fP" 1c
In previous versions of WiredTiger, all cursors in a session were reset at transaction boundaries (\fBWT_SESSION::begin_transaction\fP, \fBWT_SESSION::commit_transaction\fP and \fBWT_SESSION::rollback_transaction\fP)\&. Now they are only reset by \fBWT_SESSION::rollback_transaction\fP\&.
.PP
This change means that a cursor can be used to iterate through a table and perform transactional updates based on the visited records without the cursor losing its position\&.
.PP
Applications relying on this behavior (for example, to avoid pinning the underlying cursor resources), should reset cursors explicitly when the position is no longer required\&. 
.PP
.IP "\fB\fBWT_COLLATOR\fP interface changes \fP" 1c
Add a new \fBWT_COLLATOR::customize\fP callback that WiredTiger will call (if set) for each data source configured to use the collator\&. Applications using the existing \fBWT_COLLATOR\fP interface that do not require the new functionality should set this callback to \fCNULL\fP\&.  
.IP "\fB\fBwiredtiger_open\fP lsm_merge option changed \fP" 1c
The global lsm_merge configuration setting has been moved into the \fClsm_manager\fP option group\&. To disable merges in all LSM trees pass \fClsm_manger=\fP(merge=false) to \fBwiredtiger_open\fP\&.  
.IP "\fBJava include path search changes \fP" 1c
We have updated the configure logic used to search for Java Native Interface files\&. This fixes problems building WiredTiger's Java API, particularly on OS X, but may introduce problems if your build procedure relied on the old search behavior\&.  
.IP "\fBDefault mutex implementation changed \fP" 1c
The default mutex implementation has been changed from adaptive pthread mutexes to non-adaptive pthread mutexes\&. Installations can explicitly select adaptive pthread mutexes by specifying \fC--with-spinlock=pthread_adaptive\fP at configuration time\&.  
.IP "\fBLSM merge threads option change \fP" 1c
The \fBWT_SESSION::create\fP \fClsm=\fP(merge_threads) configuration option has been replaced by the W::wiredtiger_open \fClsm_manager=\fP(worker_thread_max) option\&. The new version specifies a set of LSM threads that are shared across all LSM trees in a database, the older configuration was per LSM table\&. 
.PP
.PP
.PP
 
.SH "Upgrading to Version 2\&.3\&.1"
.PP
.IP "\fB\fBwiredtiger_open\fP eviction_workers configuration changed \fP" 1c
The \fCeviction_workers\fP configuration setting has been replaced by \fCeviction=\fP(threads_min) and \fCeviction=\fP(threads_max) settings\&.
.PP
There is also a semantic change because \fCeviction_workers\fP used to configure additional threads whereas the new settings configure the total number of threads involved with eviction\&. 
.PP
.PP
.PP
 
.SH "Upgrading to Version 2\&.3\&.0"
.PP
There are no special upgrade steps required\&.
.SH "Upgrading to Version 2\&.2\&.1"
.PP
.IP "\fB\fBwiredtiger_open\fP configuration parsing order changed \fP" 1c
In the 2\&.2\&.1 release, the order that configuration strings are parsed and override earlier values changed\&. Applications using the \fCWiredtiger\&.config\fP file or \fCWIREDTIGER_CONFIG\fP environment variable may need to change\&. The old order: 
.PD 0

.IP "1." 4
default \fBwiredtiger_open\fP configuration 
.IP "2." 4
base configuration file, created with the database 
.IP "3." 4
user configuration file \fCWiredtiger\&.config\fP 
.IP "4." 4
user environment variable \fCWIREDTIGER_CONFIG\fP 
.IP "5." 4
configuration string passed in to \fBwiredtiger_open\fP 
.PP
.PP
In the new order the user's configuration settings override:
.PP
.PD 0
.IP "1." 4
default \fBwiredtiger_open\fP configuration 
.IP "2." 4
base configuration file, created with the database 
.IP "3." 4
configuration string passed in to \fBwiredtiger_open\fP 
.IP "4." 4
user configuration file \fCWiredtiger\&.config\fP 
.IP "5." 4
user environment variable \fCWIREDTIGER_CONFIG\fP 
.PP
.PP
.IP "\fB\fCos_cache_dirty_max\fP off for LSM \fP" 1c
In some earlier versions of WiredTiger, creating an LSM table automatically configured \fCos_cache_dirty_max\fP, causing additional system calls that slowed some workloads\&. Applications that benefit from this setting should set it explicitly in \fBWT_SESSION::create\fP\&. 
.PP
.IP "\fB\fCtransaction_sync\fP setting change \fP" 1c
In the 2\&.2\&.1 release of WiredTiger the \fBwiredtiger_open\fP \fCtransaction_sync\fP configuration setting has changed from a string value to a structure with two fields: \fCmethod\fP, which corresponds to the previous value (\fCdsync\fP, \fCfsync\fP or \fCnone\fP), and \fCenabled\fP, which determines whether there is a sync on every transaction commit by default\&. Applications can enable or disable sync for a specific transaction with the \fCsync\fP setting to \fBWT_SESSION::begin_transaction\fP\&. 
.PP
.PP
.PP
 
.SH "Upgrading to Version 2\&.2\&.0"
.PP
.IP "\fB\fBWT_SESSION::create\fP prefix_compression disabled by default \fP" 1c
In the 2\&.2\&.0 release, prefix compression default to \fCfalse\fP\&. Applications that benefit from prefix compression will need to explicitly set \fCprefix_compression=true\fP when creating tables\&. 
.PP
.IP "\fBwiredtiger_open verbose message changes \fP" 1c
In the 2\&.2\&.0 release it is now necessary to include \fC--enable-verbose\fP in the configure command to be able to use verbose messages\&. 
.PP
.PP
.PP
 
.SH "Upgrading to Version 2\&.1\&.2"
.PP
.IP "\fB\fBwiredtiger_open\fP shared_cache configuration changes \fP" 1c
In the 2\&.1\&.2 release of WiredTiger the \fBwiredtiger_open\fP \fCshared_cache\fP configuration option group have changed\&. The option that was named \fCenable\fP is no longer available\&. To enable a \fCshared_cache\fP it is compulsory to name the pool being shared\&. We are now also enforcing that only one of \fCcache_size\fP and \fCshared_cache\fP are specified in the \fBwiredtiger_open\fP configuration string\&. 
.PP
.PP
.PP
 
.SH "Upgrading to Version 2\&.1\&.1"
.PP
.IP "\fBWT_EXTENSION_API::config methods \fP" 1c
In the 2\&.1\&.1 release of WiredTiger the configuration string parsing API has been changed and added to a new public handle\&. The WT_EXTENSION_API::config_strget, WT_EXTENSION_API::config_scan_begin, WT_EXTENSION_API::config_scan_next and WT_EXTENSION_API::config_scan_end have been removed\&. They have been replaced by a \fBWT_EXTENSION_API::config_parser_open\fP method, which can be used to parse configuration strings\&. See the \fBWT_CONFIG_PARSER\fP documentation for examples on how to use the updated API\&. 
.PP
.PP
.PP
 
.SH "Upgrading to Version 2\&.1"
.PP
.IP "\fB\fBWT_ITEM::size\fP type \fP" 1c
In the 2\&.1 release of WiredTiger \fBWT_ITEM::size\fP type has changed from \fCuint32_t\fP to \fCsize_t\fP\&. Applications may require modifications to resolve compile-time errors\&. 
.PP
.IP "\fB\fBWT_COMPRESSOR::compress_raw\fP signature \fP" 1c
In the 2\&.1 release of WiredTiger, the behavior of the compress_raw callback has changed so that it will only be retried if it returns \fCEAGAIN\fP\&. If it returns zero and sets \fCresult_slots\fP to zero, WiredTiger will assume that raw compression has failed and will fall back to calling \fBWT_COMPRESSOR::compress\fP\&. 
.PP
.IP "\fBTransaction sync default setting \fP" 1c
In the 2\&.1 release of WiredTiger the \fBwiredtiger_open\fP \fCtransaction_sync\fP configuration setting default value has changed from 'dsync' to 'fsync'\&. This is due to enhancements to the group commit implementation in WiredTiger - which mean that greater throughput can be achieved with explicit 'fsync' calls than by enabling 'dsync' on a file handle\&. Applications that don't execute concurrent transactions may see better throughput with transaction_sync set to 'dsync'\&. 
.PP
.PP
.PP
 
.SH "Upgrading to Version 2\&.0"
.PP
.IP "\fBFile format changes \fP" 1c
The underlying file format is unchanged in 2\&.0 
.PP
.IP "\fB\fBWT_SESSION::create\fP LSM configuration options \fP" 1c
In the 2\&.0 release of WiredTiger the LSM configuration options have been collected into a configuration option subgroup\&. All configuration options to \fBWT_SESSION::create\fP that previously had a prefix of \fClsm_\fP now belong to the \fClsm\fP configuration group\&. If you are explicitly configuring any of the following options, you should review the \fBWT_SESSION::create\fP documentation for details of the updated syntax: lsm_auto_throttle, lsm_bloom, lsm_bloom_config, lsm_bloom_bit_count, lsm_bloom_hash_count, lsm_bloom_oldest, lsm_chunk_max, lsm_chunk_size, lsm_merge_max and lsm_merge_threads\&. 
.PP
.PP
.PP
 
.SH "Upgrading to Version 1\&.6\&.6"
.PP
.IP "\fBFile format changes \fP" 1c
The underlying file formats changed in the 1\&.6\&.6 release; tables and files should be dumped and re-loaded into a new database\&. 
.PP
.IP "\fB\fBWT_SESSION::compact\fP trigger configuration \fP" 1c
In previous releases, the \fCtrigger\fP configuration string to the \fBWT_SESSION::compact\fP method specified a requirement to initiate compaction; in the 1\&.6\&.6 release, this configuration string has been removed, and compaction will be attempted if it seems likely at least 10% of the file can be recovered\&. Applications may require modifications to resolve run-time errors\&. 
.PP
.IP "\fBStatistics configuration \fP" 1c
In previous releases, the \fBwiredtiger_open\fP function took a \fCstatistics\fP configuration, which defaulted to false; when set to true, additional, generally performance-expensive statistics were maintained by the database, above and beyond a default set of statistics\&. In version 1\&.6\&.6, the \fCstatistics\fP configuration is a list which may be set to 'all', 'fast' or 'none'\&. When set to 'none', no statistics are maintained by the database; when set to 'fast', only relatively performance-inexpensive statistics are maintained, and when set to 'all', all statistics are maintained, regardless of cost\&.
.PP
In previous releases, the \fBwiredtiger_open\fP function took a \fCstatistics_log\fP configuration which logged the performance-inexpensive database statistics to a file\&. In version 1\&.6\&.6, the \fCstatistics_log\fP configuration logs whatever statistics are configured for the database\&. If the database is configured with \fCstatistics\fP to 'none', no statistics will be logged to the file; if the database is configured with 'all' or 'fast', the corresponding statistics will be logged to the file\&.
.PP
In previous releases, the WT_SESSION::cursor method took \fCstatistics_clear\fP and a \fCstatistics_fast\fP configurations\&. The \fCstatistics_clear\fP configuration defaulted to false; when set to true, statistics counters were reset after they were gathered by the cursor\&. The \fCstatistics_fast\fP configuration defaulted to true; when set to true, the cursor only gathered performance-inexpensive statistics for the cursor, and when set to false, the cursor gathered all available statistics, regardless of cost\&.
.PP
In version 1\&.6\&.6, these two configuration booleans have been replaced with a new configuration list \fCstatistics\fP, which may be set from the values 'clear', 'fast' and 'all'\&. When 'fast' is configured, only relatively performance-inexpensive statistics are gathered, and when 'all' is configured, all statistics are gathered, regardless of cost\&. When 'clear' is configured, statistics counters are reset after they are gathered\&.
.PP
Additionally, in version 1\&.6\&.6, statistics cursors must be configured to agree with the database statistics configuration; when the database statistics are configured to 'none', attempts to open a statistics cursor will fail; when the database statistics are configured to 'fast', a statistics cursor must also be configured to 'fast'; when the database statistics are configured to 'all', a statistics cursor may be configured to either 'fast' or 'all'\&. Opening a statistics cursor without configuring either 'fast' or 'all' will configure the cursor to be the same as the current database configuration\&.
.PP
Applications may require modifications to resolve run-time errors; application statistics configuration and cursors should be reviewed to confirm they are configured for the desired behavior; 
.PP
.IP "\fB\fBWT_EVENT_HANDLER\fP interface changes \fP" 1c
Add a new \fBWT_EVENT_HANDLER::handle_close\fP callback that WiredTiger will call any time it automatically closes an application session or cursor handle\&.
.PP
Additionally add a \fBWT_SESSION\fP parameter into the existing \fBWT_EVENT_HANDLER::handle_error\fP, \fBWT_EVENT_HANDLER::handle_message\fP and \fBWT_EVENT_HANDLER::handle_progress\fP callback functions\&. 
.PP
.PP
.PP
 
.SH "Upgrading to Version 1\&.6\&.5"
.PP
.IP "\fB\fBWT_CURSOR::insert\fP behavior \fP" 1c
In previous releases, the \fBWT_CURSOR::insert\fP ended positioned at the inserted record\&. To minimize the cursor resources held by applications inserting many records, the \fBWT_CURSOR::insert\fP method has been changed to end without any position\&. Application insert cursors should be reviewed to confirm they do not attempt to iterate after an insert\&. 
.PP
.IP "\fB\fBWT_SESSION::open_cursor\fP statistics_fast configuration \fP" 1c
In previous releases, the default \fCstatistics_fast\fP configuration to the \fBWT_SESSION::open_cursor\fP method was \fCfalse\fP; in the 1\&.6\&.5 release, the default statistics_fast configuration is \fCtrue\fP\&. Applications opening statistics cursors should be reviewed to confirm they have the correct behavior\&. 
.PP
.IP "\fBSynchronous checkpoint configuration \fP" 1c
The \fCsync\fP configuration key to \fBwiredtiger_open\fP has been renamed \fCcheckpoint_sync\fP\&. 
.PP
.PP
.PP
 
.SH "Upgrading to Version 1\&.6\&.4"
.PP
.IP "\fBFile format changes \fP" 1c
The underlying file formats changed in the 1\&.6\&.4 release; tables and files should be dumped and re-loaded into a new database\&. 
.PP
.IP "\fBwt utility load command \fP" 1c
The default behavior of the \fCwt\fP utility's \fCload\fP command has been changed to overwrite existing data, by default, and the \fC-o\fP flag to the \fCload\fP command (overwrite existing data) has been replaced with the \fC-n\fP flag (do not overwrite existing data)\&. Applications requiring the previous default behavior of not overwriting existing data should add the \fC-n\fP option to their command line configuration; applications previously using the \fC-o\fP option on their command line configurations should remove it\&. 
.PP
.PP
.PP
 
.SH "Upgrading to Version 1\&.6\&.3"
.PP
.IP "\fBCursor overwrite configuration \fP" 1c
In previous releases, the \fBWT_SESSION::open_cursor\fP \fCoverwrite\fP configuration string behaved inconsistently across Btree and LSM data sources\&. In Btree, \fCoverwrite\fP was \fCfalse\fP by default and was limited to the \fBWT_CURSOR::insert\fP method, changing an insert to succeed regardless of whether or not the record previously existed\&. In LSM trees, \fCoverwrite\fP was \fCtrue\fP by default, and applied to the \fBWT_CURSOR::insert\fP, \fBWT_CURSOR::remove\fP and \fBWT_CURSOR::update\fP methods, configuring all three methods to ignore the existing state of the record\&.
.PP
In the 1\&.6\&.3 release, the \fCoverwrite\fP configuration is consistent across both Btree and LSM tree data sources\&. For performance reasons, the default is the behavior previously described for LSM trees: in other words, \fCoverwrite\fP is \fCtrue\fP by default, causing \fBWT_CURSOR::insert\fP, \fBWT_CURSOR::remove\fP and \fBWT_CURSOR::update\fP to ignore the current state of the record, and these methods will succeed regardless of whether or not the record previously exists\&. When an application configures \fCoverwrite\fP to \fCfalse\fP, \fBWT_CURSOR::insert\fP will fail with \fBWT_DUPLICATE_KEY\fP if the record previously exists, and \fBWT_CURSOR::update\fP and \fBWT_CURSOR::remove\fP will fail with \fBWT_NOTFOUND\fP if the record does not previously exist\&.
.PP
\fBThis is a potentially serious API change that will not be detected by compilation\&.\fP Application cursors should be reviewed to confirm they are configured for the desired behavior\&. 
.PP
.IP "\fB\fBwiredtiger_open\fP no longer accepts a \fCtransactional\fP configuration \fP" 1c
The \fCtransactional\fP configuration key has been removed from \fBwiredtiger_open\fP\&. Any application setting it should simply remove it, no change in application behavior is needed\&. 
.PP
.PP
.PP
 
.SH "Upgrading to Version 1\&.6\&.2"
.PP
.IP "\fBTable of WiredTiger extension methods \fP" 1c
New functionality was added to the list of WiredTiger extension methods; applications using the extension methods will require recompilation\&. 
.PP
.IP "\fB\fBWT_SESSION::create\fP no longer accepts a 'source' configuration \fP" 1c
The \fC'source'\fP configuration key has been removed from \fBWT_SESSION::create\fP\&. Normal applications should not have been using it, and there were a number of bugs associated with it\&. 
.PP
.IP "\fBDefault checksum configuration \fP" 1c
The default file checksum configuration was changed to \fCuncompressed\fP, which means blocks that are compressed will no longer also include a checksum, by default\&. Applications using compression insufficient for the purposes of corrupted block identification should change their file checksum configuration to \fCon\fP\&. 
.PP
.PP
.PP
 
.SH "Upgrading to Version 1\&.6\&.1"
.PP
.IP "\fBDefault page sizes \fP" 1c
In the 1\&.6\&.1 release, the default for the \fBWT_SESSION::create\fP configuration string \fCallocation_size\fP changed from 512B to 4KB, and the default for the configuration string \fCinternal_page_max\fP changed from 2KB to 4KB\&. Applications wanting to create files with smaller allocation or internal page sizes will need to set those configuration values explicitly\&. 
.PP
.IP "\fBShared cache configuration \fP" 1c
In the 1\&.6\&.1 release, an explicit shared_cache=(enable=boolean) option was added to the wiredtiger_open configuration options\&. Existing applications that use shared cache functionality will need to add the enable option to the configuration string\&. The default value for the option is false\&. 
.PP
.IP "\fB\fBWT_COMPRESSOR::compress_raw\fP signature \fP" 1c
In the 1\&.6\&.1 release, the \fCsplit_pct\fP argument to the \fBWT_COMPRESSOR::compress_raw\fP function changed type from \fCu_int\fP to \fCint\fP, applications may require modification to avoid compiler warnings\&. 
.PP
.PP
.PP
 
.SH "Upgrading to Version 1\&.6\&.0"
.PP
.IP "\fBFile format changes \fP" 1c
The underlying file formats changed in the 1\&.6\&.0 release; tables and files should be dumped and re-loaded into a new database\&. 
.PP
.PP
.PP
 
.SH "Upgrading to Version 1\&.5\&.3"
.PP
.IP "\fBConfiguration strings \fP" 1c
An undocumented feature where configuration string case was ignored has been removed, and all configuration strings are now case-dependent\&. Applications may require modifications to resolve run-time errors\&. 
.PP
.IP "\fBLoading extensions and \fBWT_EXTENSION_API\fP \fP" 1c
The following changes are only applicable to applications loading extensions and/or using the WiredTiger extension functions described in \fBWT_EXTENSION_API\fP\&.
.PP
.PD 0
.IP "\(bu" 2
The signature of \fBwiredtiger_extension_init\fP has changed from \fC(\fBWT_SESSION\fP *session, \fBWT_EXTENSION_API\fP *api)\fP to \fC(\fBWT_CONNECTION\fP *connection)\fP\&. As no \fBWT_EXTENSION_API\fP handle reference is passed to the function, the \fBWT_CONNECTION::get_extension_api\fP has been added to support retrieval of the extension API\&. Applications may require modifications\&.
.PP

.IP "\(bu" 2
The type of all configuration arguments to extension methods has changed from \fC'const char *'\fP to \fC'WT_CONFIG_ARG *'\fP, and the WT_EXTENSION::config method added to support configuration parsing; applications may require modifications\&.
.PP

.IP "\(bu" 2
The undocumented \fCwiredtiger_XXX\fP defines for \fBWT_EXTENSION_API\fP extension methods have been removed from the \fCwiredtiger_ext\&.h\fP include file; applications should instead use the method handles referenced by the \fBWT_EXTENSION_API\fP handle to call extension functions\&.
.PP

.IP "\(bu" 2
The extension API methods have all changed to require an additional parameter, the \fBWT_EXTENSION_API\fP method handle; applications may require modifications\&.
.PP

.IP "\(bu" 2
The WT_SESSION::msg_printf method was replaced by \fBWT_EXTENSION_API::msg_printf\fP; applications may require modifications\&. 
.PP
.PP
.IP "\fB\fBWT_DATA_SOURCE\fP \fP" 1c
The following changes are only applicable to applications providing new implementations of the WiredTiger \fBWT_DATA_SOURCE\fP class\&.
.PP
.PD 0
.IP "\(bu" 2
The \fBWT_DATA_SOURCE\fP class has three new methods: \fBWT_DATA_SOURCE::compact\fP, \fBWT_DATA_SOURCE::salvage\fP, and \fBWT_DATA_SOURCE::verify\fP; applications may require modifications to resolve compile errors\&.
.PP

.IP "\(bu" 2
The \fCowner\fP argument to the \fBWT_DATA_SOURCE::open_cursor\fP method has been removed; applications may require modifications to resolve compile errors\&.
.PP

.IP "\(bu" 2
The \fCexclusive\fP argument to the \fBWT_DATA_SOURCE::create\fP method has been removed; applications may require modifications to resolve compile errors\&. 
.PP
.PP
.PP
.PP
 
.SH "Upgrading to Version 1\&.4\&.3"
.PP
.IP "\fBStatistics \fP" 1c
WiredTiger statistics are no longer maintained by default; to configure statistics, use the \fCstatistics\fP configuration string to the \fBwiredtiger_open\fP function\&. 
.PP
.PP
.PP
 
.SH "Upgrading to Version 1\&.3\&.9"
.PP
.IP "\fBCompression \fP" 1c
A new member, \fBWT_COMPRESSOR::compress_raw\fP, was added to the \fBWT_COMPRESSOR\fP extension API\&. Applications using the \fBWT_COMPRESSOR\fP extension API should add a NULL as the second field of that structure\&. 
.PP
.IP "\fBChecksums \fP" 1c
The \fBWT_SESSION::create\fP method's \fCchecksum\fP configuration string has been changed from a boolean type to a string type\&. Applications using the checksum configuration string should change a value of \fCtrue\fP to the string \fCon\fP, and a value of \fCfalse\fP to the string \fCoff\fP or the string \fCuncompressed\fP\&. 
.PP
.IP "\fBFile format changes \fP" 1c
The underlying file formats changed in the 1\&.3\&.9 release; tables and files should be dumped and re-loaded into a new database\&. 
.PP
.PP
.PP
 
.SH "Upgrading to Version 1\&.3\&.8"
.PP
.IP "\fBStatistics keys \fP" 1c
The \fBstatistics key constants\fP have been renamed to use all capitals, and use consistent prefixes to distinguish between connection statistics and statistics for data sources\&. 
.PP
.PP
.PP
 
.SH "Upgrading to Version 1\&.3\&.6"
.PP
.IP "\fBInstalled library names \fP" 1c
The installed WiredTiger extension library names changed to limit namespace pollution:
.PP
LibraryPrevious NameNew Name Bzip2 compressionbzip2_compress\&.alibwiredtiger_bzip2\&.a bzip2_compress\&.lalibwiredtiger_bzip2\&.la bzip2_compress\&.solibwiredtiger_bzip2\&.so Snappy compressionsnappy_compress\&.alibwiredtiger_snappy\&.a snappy_compress\&.lalibwiredtiger_snappy\&.la snappy_compress\&.solibwiredtiger_snappy\&.so No-op compressionnop_compress\&.aNo longer installed nop_compress\&.laNo longer installed nop_compress\&.soNo longer installed Reverse order collatorreverse_collator\&.aNo longer installed reverse_collator\&.laNo longer installed reverse_collator\&.soNo longer installed 
.PP
.IP "\fBBuilt-in compression names \fP" 1c
The built-in compression name arguments to the \fBWT_SESSION\fP:create \fCblock_compressor\fP configuration string changed for consistency:
.PP
ExtensionPrevious NameNew Name Bzip2 compression'bzip2_compress''bzip2' Snappy compression'snappy_compress''snappy' 
.PP
.PP
.PP
 
.SH "Upgrading to Version 1\&.3\&.5"
.PP
.IP "\fBFile format changes \fP" 1c
The underlying file formats changed in the 1\&.3\&.5 release; tables and files should be dumped and re-loaded into a new database\&. 
.PP
.PP
.PP
 
.SH "Upgrading to Version 1\&.3"
.PP
.IP "\fBCheckpoint and Snapshot \fP" 1c
The checkpoint functionality supported by \fBWT_SESSION::checkpoint\fP and the snapshot functionality supported by WT_SESSION::sync have been merged into a single piece of functionality\&.
.PP
.PD 0
.IP "\(bu" 2
\fBWT_SESSION\&.checkpoint\fP
.br
 The \fBWT_SESSION::checkpoint\fP method's \fCsnapshot\fP configuration string has been renamed to \fCname\fP\&. The name assigned to checkpoints without a specified \fCname\fP configuration is now \fC'WiredTigerCheckpoint'\fP\&.
.PP

.IP "\(bu" 2
\fBWT_SESSION\&.drop\fP
.br
 In releases before 1\&.3, the \fBWT_SESSION::drop\fP method was used to delete snapshots\&. In 1\&.3, the functionality of deleting snapshots has been moved to the \fBWT_SESSION::checkpoint\fP method, specifically, snapshots are discarded using the \fBWT_SESSION::checkpoint\fP method's \fCdrop\fP configuration string\&.
.PP

.IP "\(bu" 2
WT_SESSION\&.sync
.br
 The WT_SESSION::sync method has been removed from the 1\&.3 release; the functionality of creating an object snapshot has moved to the \fBWT_SESSION::checkpoint\fP method, specifically, creating a snapshot of a one or more objects is done using the \fBWT_SESSION::checkpoint\fP method's \fCtarget\fP configuration string\&.
.PP

.IP "\(bu" 2
wt drop -s
.br
 The \fC-s\fP option to the \fCdrop\fP command for the \fCwt\fP command line utility has been removed, and object snapshots may no longer be removed from the command line\&.
.PP

.IP "\(bu" 2
wt dump, list -s
.br
 The \fC-s\fP options to the \fCdump\fP and \fClist\fP commands for the \fCwt\fP command line utility have been renamed to be \fC-c\fP\&. 
.PP
.PP
.IP "\fB\fBWT_SESSION\&.open_cursor\fP \fP" 1c
In releases before 1\&.3, the \fBWT_SESSION::open_cursor\fP method could duplicate cursors that were not positioned in an object; in 1\&.3, a cursor must be positioned in order to be duplicated\&. 
.PP
.IP "\fBTransactional cursors \fP" 1c
In releases before 1\&.3, ending a transaction by calling the \fBWT_SESSION::commit_transaction\fP or \fBWT_SESSION::rollback_transaction\fP methods implicitly closed all open cursors; in 1\&.3, the cursors remain open, but are reset (discarding their positions and cursor values)\&. This means applications must change to either close cursors explicitly, or rely on an eventual \fBWT_SESSION::close\fP or \fBWT_CONNECTION::close\fP methods to implicitly close open cursors\&. 
.PP
.IP "\fBDefault transactional isolation level \fP" 1c
In releases before 1\&.3, the default isolation level for transaction was \fCsnapshot\fP, and the default isolation level for non-transaction operations was \fCread-uncommitted\fP; in 1\&.3, the default isolation level for all operations is \fCread-committed\fP\&.
.PP
The default can be overridden for a session using the \fCisolation\fP setting in WT_CONNECTION::open_cursor\&. 
.PP
.IP "\fB\fBWT_SESSION\&.truncate\fP \fP" 1c
In releases before 1\&.3, the \fBWT_SESSION::truncate\fP method required cursors used for truncation of a cursor range to reference existing keys in the object; in 1\&.3, the \fBWT_SESSION::truncate\fP method has been changed to allow cursors to reference any valid key in the object's name space so applications may discard portions of the object name space without knowing exactly what records the object contains\&. 
.PP
.IP "\fB\fBWT_CURSOR\&.equals\fP \fP" 1c
In releases before 1\&.3, the \fBWT_CURSOR::equals\fP method returned zero/non-zero to indicate cursor equality; in 1\&.3, the \fBWT_CURSOR::equals\fP method has been replaced with \fBWT_CURSOR::compare\fP, which compares two cursors and returns a cursor comparison status (less than 0, equal to 0, or greater than 0) depending on the cursors' key order\&. 
.PP
.IP "\fBFile format changes \fP" 1c
The underlying file formats changed in the 1\&.3 release; tables and files should be dumped and re-loaded into a new database\&. 
.PP
.PP

